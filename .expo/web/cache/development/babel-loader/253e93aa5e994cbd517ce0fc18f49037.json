{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/alecdifederico/code/wbl-react-stats-app/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { SplashScreen } from 'expo';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport FlashMessage from 'react-native-flash-message';\nimport { db, auth } from \"./Firebase\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\nimport PasswordReset from \"./pages/PasswordReset\";\nimport TabNavigation from \"./components/TabNavigation\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useState = useState('Login'),\n      _useState2 = _slicedToArray(_useState, 2),\n      initialRoute = _useState2[0],\n      setInitialRoute = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userData = _useState4[0],\n      setUserData = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      games = _useState6[0],\n      setGames = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      users = _useState8[0],\n      setUsers = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dataLoaded = _useState10[0],\n      setDataLoaded = _useState10[1];\n\n  function getUsers() {\n    var users;\n    return _regeneratorRuntime.async(function getUsers$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(db.collection('users').get().then(function (snapshot) {\n              var users = [];\n              snapshot.forEach(function (doc) {\n                var user = doc.data();\n                users.push(user);\n              });\n              return users;\n            }));\n\n          case 2:\n            users = _context.sent;\n            setUsers(users);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function getGames() {\n    var games;\n    return _regeneratorRuntime.async(function getGames$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(db.collection('games').get().then(function (snapshot) {\n              var games = [];\n              snapshot.forEach(function (doc) {\n                var game = doc.data();\n                games.push(game);\n              });\n              return games;\n            }));\n\n          case 2:\n            games = _context2.sent;\n            setGames(games);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  useEffect(function () {\n    SplashScreen.preventAutoHide();\n    auth.onAuthStateChanged(function _callee(user) {\n      var currentUser;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!user) {\n                _context3.next = 7;\n                break;\n              }\n\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(db.collection('users').doc(user.uid).get());\n\n            case 3:\n              currentUser = _context3.sent;\n\n              if (currentUser != null) {\n                setInitialRoute('Form');\n                setUserData(currentUser.data());\n              }\n\n              _context3.next = 8;\n              break;\n\n            case 7:\n              setInitialRoute('Login');\n\n            case 8:\n              getGames();\n              getUsers();\n              setDataLoaded(true);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    });\n  }, []);\n\n  if (dataLoaded && games.length != 0 && users.length != 0) {\n    setTimeout(function () {\n      SplashScreen.hide();\n    }, 250);\n    return React.createElement(NavigationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      }\n    }, React.createElement(Stack.Navigator, {\n      initialRouteName: initialRoute,\n      screenOptions: {\n        headerShown: false,\n        gestureEnabled: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"SignUp\",\n      component: SignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"PasswordReset\",\n      component: PasswordReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Form\",\n      component: TabNavigation,\n      initialParams: {\n        userData: userData,\n        games: games,\n        users: users\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      }\n    })), React.createElement(FlashMessage, {\n      position: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      }\n    }));\n  } else {\n    return null;\n  }\n}\n;","map":{"version":3,"sources":["/Users/alecdifederico/code/wbl-react-stats-app/App.js"],"names":["React","useEffect","useState","SplashScreen","NavigationContainer","createStackNavigator","FlashMessage","db","auth","SignUp","Login","PasswordReset","TabNavigation","Stack","App","initialRoute","setInitialRoute","userData","setUserData","games","setGames","users","setUsers","dataLoaded","setDataLoaded","getUsers","collection","get","then","snapshot","forEach","doc","user","data","push","getGames","game","preventAutoHide","onAuthStateChanged","uid","currentUser","length","setTimeout","hide","headerShown","gestureEnabled"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SplashScreen } from 'expo';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport FlashMessage from 'react-native-flash-message';\n\nimport { db, auth } from './Firebase';\n\nimport SignUp from './pages/SignUp'\nimport Login from './pages/Login';\nimport PasswordReset from './pages/PasswordReset';\nimport TabNavigation from './components/TabNavigation';\n\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [initialRoute, setInitialRoute] = useState('Login');\n  const [userData, setUserData] = useState({});\n  const [games, setGames] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  async function getUsers() {\n    const users = await db.collection('users').get()\n      .then(snapshot => {\n        let users = [];\n\n        snapshot.forEach(doc => { \n          let user = doc.data();\n          users.push(user);\n        });\n        return users;\n      });\n\n    setUsers(users);\n  }\n\n  async function getGames() {\n    const games = await db.collection('games').get()\n      .then(snapshot => {\n        let games = [];\n\n        snapshot.forEach(doc => { \n          let game = doc.data();\n          games.push(game);\n        });\n        return games;\n      });\n\n    setGames(games)\n  }\n\n  useEffect(() => {\n    SplashScreen.preventAutoHide();\n\n    auth.onAuthStateChanged(async user => {\n      if (user) {\n        const currentUser = await db\n          .collection('users')\n          .doc(user.uid)\n          .get()\n        \n        if (currentUser != null) {\n          setInitialRoute('Form');\n          setUserData(currentUser.data());\n        } \n      } else {\n        setInitialRoute('Login')\n      }\n\n      getGames();\n      getUsers();\n\n      setDataLoaded(true);\n    })\n  }, [])\n\n  if (dataLoaded && games.length != 0 && users.length != 0) {\n    setTimeout(() => {\n      SplashScreen.hide();\n    }, 250);\n\n    return (\n      <NavigationContainer>\n        <Stack.Navigator initialRouteName={initialRoute} screenOptions={{headerShown: false, gestureEnabled: false}}>\n          <Stack.Screen name='Login' component={Login} />\n          <Stack.Screen name=\"SignUp\" component={SignUp} />\n          <Stack.Screen name=\"PasswordReset\" component={PasswordReset} />\n          <Stack.Screen name='Form' component={TabNavigation} initialParams={{userData, games, users}} />\n        </Stack.Navigator>\n        <FlashMessage position=\"center\" />\n      </NavigationContainer>\n    );\n  } else {\n    return null;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}