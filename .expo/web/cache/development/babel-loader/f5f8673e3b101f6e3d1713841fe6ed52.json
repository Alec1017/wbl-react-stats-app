{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/alecdifederico/code/wbl-react-stats-app/pages/Settings.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as Haptics from 'expo-haptics';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActionSheetIOS from \"react-native-web/dist/exports/ActionSheetIOS\";\nimport { showMessage } from 'react-native-flash-message';\nimport { Button } from 'react-native-paper';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport Header from \"../components/Header\";\nimport { auth, db } from \"../Firebase\";\nexport default function Settings(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEmailLoading = _useState2[0],\n      setIsEmailLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isStatsLoading = _useState4[0],\n      setIsStatsLoading = _useState4[1];\n\n  var _useState5 = useState(props.route.params.userData.isAdmin),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isAdmin = _useState6[0],\n      setIsAdmin = _useState6[1];\n\n  var _useState7 = useState(props.route.params.userData.subscribed),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isSubscribed = _useState8[0],\n      setIsSubscribed = _useState8[1];\n\n  var _useState9 = useState('Unsubscribe from emails'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      subscribedText = _useState10[0],\n      setSubscribedText = _useState10[1];\n\n  useEffect(function () {\n    if (!isSubscribed) {\n      setSubscribedText('Subscribe to emails');\n    } else {\n      setSubscribedText('Unsubscribe from emails');\n    }\n  });\n\n  function toggleEmailSubscription() {\n    return _regeneratorRuntime.async(function toggleEmailSubscription$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsEmailLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(db.collection('users').doc(props.route.params.userData.uid).update({\n              subscribed: !isSubscribed\n            }));\n\n          case 3:\n            setIsSubscribed(!isSubscribed);\n            setIsEmailLoading(false);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function updateStats() {\n    var response, data, messageType, messageTitle, messageContent, feedbackType;\n    return _regeneratorRuntime.async(function updateStats$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setIsStatsLoading(true);\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"https://data.quietbroom.com/api/update_sheet\" + (\"/\" + props.route.params.userData.uid)));\n\n          case 4:\n            response = _context2.sent;\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            data = _context2.sent;\n            messageType = data.completed ? 'success' : 'danger';\n            messageTitle = data.completed ? 'Success!' : 'Error';\n            messageContent = data.completed ? 'Stat sheet updated' : 'Something went wrong. Try again later';\n            feedbackType = data.completed ? Haptics.NotificationFeedbackType.Success : Haptics.NotificationFeedbackType.Error;\n            showMessage({\n              message: \"\\n\" + messageTitle,\n              description: messageContent,\n              type: messageType,\n              style: {\n                height: '20%',\n                width: '70%'\n              },\n              titleStyle: {\n                textAlign: 'center',\n                fontSize: 20,\n                fontWeight: 'bold'\n              },\n              textStyle: {\n                textAlign: 'center'\n              },\n              duration: 2000\n            });\n            Haptics.notificationAsync(feedbackType);\n            _context2.next = 19;\n            break;\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](1);\n            showMessage({\n              message: \"\\nError\",\n              description: \"Something went wrong. Try again later\",\n              type: \"danger\",\n              style: {\n                height: '20%',\n                width: '70%'\n              },\n              titleStyle: {\n                textAlign: 'center',\n                fontSize: 20,\n                fontWeight: 'bold'\n              },\n              textStyle: {\n                textAlign: 'center'\n              },\n              duration: 2000\n            });\n\n          case 19:\n            setIsStatsLoading(false);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 16]]);\n  }\n\n  function logoutConfirmation() {\n    ActionSheetIOS.showActionSheetWithOptions({\n      title: 'Are you sure?',\n      message: 'You will be logged out of your account. Do you want to log out?',\n      options: ['Cancel', 'Log out'],\n      destructiveButtonIndex: 1,\n      cancelButtonIndex: 0\n    }, function (buttonIndex) {\n      if (buttonIndex === 1) {\n        handleLogout();\n      }\n    });\n  }\n\n  function handleLogout() {\n    auth.signOut();\n    props.navigation.reset({\n      index: 0,\n      routes: [{\n        name: 'Login'\n      }]\n    });\n    showMessage({\n      message: \"\\nLog out success\",\n      description: \"You've been logged out\",\n      type: \"info\",\n      style: {\n        height: '20%',\n        width: '70%'\n      },\n      titleStyle: {\n        textAlign: 'center',\n        fontSize: 20,\n        fontWeight: 'bold'\n      },\n      textStyle: {\n        textAlign: 'center'\n      },\n      duration: 2000\n    });\n    Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);\n  }\n\n  return React.createElement(Header, {\n    title: \"Settings\",\n    disableScroll: true,\n    disableRefresh: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    }\n  }, React.createElement(Button, {\n    mode: \"contained\",\n    color: \"#ff4444\",\n    onPress: function onPress() {\n      return logoutConfirmation();\n    },\n    style: styles.button,\n    contentStyle: styles.buttonContent,\n    labelStyle: styles.buttonLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    }\n  }, \"Log Out\"), React.createElement(Button, {\n    mode: \"contained\",\n    color: \"#007bff\",\n    loading: isEmailLoading,\n    onPress: function onPress() {\n      return toggleEmailSubscription();\n    },\n    style: styles.button,\n    contentStyle: styles.buttonContent,\n    labelStyle: styles.buttonLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    }\n  }, isEmailLoading ? '' : subscribedText), isAdmin && React.createElement(Button, {\n    mode: \"contained\",\n    color: \"#00C851\",\n    loading: isStatsLoading,\n    onPress: function onPress() {\n      return updateStats();\n    },\n    style: styles.button,\n    contentStyle: styles.buttonContent,\n    labelStyle: styles.buttonLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    }\n  }, isStatsLoading ? 'Loading' : 'Update Stat Sheet')));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    width: wp('80%')\n  },\n  button: {\n    alignSelf: 'stretch',\n    marginTop: 20\n  },\n  buttonContent: {\n    height: 50\n  },\n  buttonLabel: {\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/Users/alecdifederico/code/wbl-react-stats-app/pages/Settings.js"],"names":["React","useState","useEffect","Haptics","showMessage","Button","widthPercentageToDP","wp","Header","auth","db","Settings","props","isEmailLoading","setIsEmailLoading","isStatsLoading","setIsStatsLoading","route","params","userData","isAdmin","setIsAdmin","subscribed","isSubscribed","setIsSubscribed","subscribedText","setSubscribedText","toggleEmailSubscription","collection","doc","uid","update","updateStats","fetch","response","json","data","messageType","completed","messageTitle","messageContent","feedbackType","NotificationFeedbackType","Success","Error","message","description","type","style","height","width","titleStyle","textAlign","fontSize","fontWeight","textStyle","duration","notificationAsync","logoutConfirmation","ActionSheetIOS","showActionSheetWithOptions","title","options","destructiveButtonIndex","cancelButtonIndex","buttonIndex","handleLogout","signOut","navigation","reset","index","routes","name","styles","container","button","buttonContent","buttonLabel","StyleSheet","create","flex","alignItems","backgroundColor","alignSelf","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Haptics from 'expo-haptics';\nimport { StyleSheet, View, ActionSheetIOS } from 'react-native';\nimport { showMessage } from 'react-native-flash-message';\nimport { Button } from 'react-native-paper';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\n\nimport Header from '../components/Header';\nimport { auth, db } from '../Firebase';\nimport { BACKEND_API } from 'react-native-dotenv';\n\n\nexport default function Settings(props) {\n  const [isEmailLoading, setIsEmailLoading] = useState(false);\n  const [isStatsLoading, setIsStatsLoading] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(props.route.params.userData.isAdmin);\n  const [isSubscribed, setIsSubscribed] = useState(props.route.params.userData.subscribed);\n  const [subscribedText, setSubscribedText] = useState('Unsubscribe from emails')\n\n  useEffect(() => {\n    if (!isSubscribed) {\n      setSubscribedText('Subscribe to emails');\n    } else {\n      setSubscribedText('Unsubscribe from emails');\n    }\n  })\n\n  async function toggleEmailSubscription() {\n    setIsEmailLoading(true);\n    await db.collection('users').doc(props.route.params.userData.uid).update({\n      subscribed: !isSubscribed\n    });\n    setIsSubscribed(!isSubscribed);\n    setIsEmailLoading(false);\n  }\n\n  async function updateStats() {\n    setIsStatsLoading(true);\n\n    try {\n      let response = await fetch(BACKEND_API + `/${props.route.params.userData.uid}`);\n      let data = await response.json();\n      \n      let messageType = data.completed ? 'success' : 'danger';\n      let messageTitle = data.completed ? 'Success!' : 'Error'\n      let messageContent = data.completed ? 'Stat sheet updated' : 'Something went wrong. Try again later'\n      let feedbackType = data.completed ? Haptics.NotificationFeedbackType.Success : Haptics.NotificationFeedbackType.Error;\n\n      showMessage({\n        message: `\\n${messageTitle}`,\n        description: messageContent,\n        type: messageType,\n        style: {height: '20%', width: '70%'},\n        titleStyle: {textAlign: 'center', fontSize: 20, fontWeight: 'bold'},\n        textStyle: {textAlign: 'center'},\n        duration: 2000\n      });\n\n      Haptics.notificationAsync(feedbackType);\n    } catch (error) {\n      showMessage({\n        message: \"\\nError\",\n        description: \"Something went wrong. Try again later\",\n        type: \"danger\",\n        style: {height: '20%', width: '70%'},\n        titleStyle: {textAlign: 'center', fontSize: 20, fontWeight: 'bold'},\n        textStyle: {textAlign: 'center'},\n        duration: 2000\n      });\n    }\n    \n    setIsStatsLoading(false);\n  }\n\n  function logoutConfirmation() {\n    ActionSheetIOS.showActionSheetWithOptions(\n      {\n        title: 'Are you sure?',\n        message: 'You will be logged out of your account. Do you want to log out?',\n        options: ['Cancel', 'Log out'],\n        destructiveButtonIndex: 1,\n        cancelButtonIndex: 0,\n      },\n      (buttonIndex) => {\n        if (buttonIndex === 1) {\n          handleLogout();\n        }\n      },\n    )\n  }\n\n  function handleLogout() {\n    auth.signOut();\n    props.navigation.reset({\n      index: 0,\n      routes: [\n        { name: 'Login'}\n      ]\n    });\n\n    showMessage({\n      message: \"\\nLog out success\",\n      description: \"You've been logged out\",\n      type: \"info\",\n      style: {height: '20%', width: '70%'},\n      titleStyle: {textAlign: 'center', fontSize: 20, fontWeight: 'bold'},\n      textStyle: {textAlign: 'center'},\n      duration: 2000\n    });\n\n    Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);\n  }\n\n  return (\n    <Header title=\"Settings\" disableScroll={true} disableRefresh={true}> \n      <View style={styles.container}>\n        <Button\n          mode='contained'\n          color='#ff4444'\n          onPress={() => logoutConfirmation()}\n          style={styles.button}\n          contentStyle={styles.buttonContent}\n          labelStyle={styles.buttonLabel}\n        >\n          Log Out\n        </Button>\n\n        <Button\n          mode='contained'\n          color='#007bff'\n          loading={isEmailLoading}\n          onPress={() => toggleEmailSubscription()}\n          style={styles.button}\n          contentStyle={styles.buttonContent}\n          labelStyle={styles.buttonLabel}\n        >\n          {isEmailLoading ? '' : subscribedText}\n        </Button>\n\n        {isAdmin &&\n          <Button\n            mode='contained'\n            color='#00C851'\n            loading={isStatsLoading}\n            onPress={() => updateStats()}\n            style={styles.button}\n            contentStyle={styles.buttonContent}\n            labelStyle={styles.buttonLabel}\n          >\n            {isStatsLoading ? 'Loading' : 'Update Stat Sheet'}\n          </Button>\n        }\n      </View>\n    </Header>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    width: wp('80%')\n  },\n  button: {\n    alignSelf: 'stretch',\n    marginTop: 20\n  },\n  buttonContent: {\n    height: 50\n  },\n  buttonLabel: {\n    fontWeight: 'bold'\n  }\n});"]},"metadata":{},"sourceType":"module"}