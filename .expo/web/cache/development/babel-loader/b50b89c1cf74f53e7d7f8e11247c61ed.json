{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/alecdifederico/code/wbl-react-stats-app/pages/Standings.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport { ActivityIndicator, DataTable } from 'react-native-paper';\nimport Header from \"../components/Header\";\nexport default function Standings(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      standings = _useState2[0],\n      setStandings = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  useEffect(function () {\n    calculateStandings();\n  }, []);\n\n  function calculateStandings() {\n    var standingsDict = {};\n\n    var _loop = function _loop(user) {\n      var fullName = user.firstName + \" \" + user.lastName;\n      var userDivision = user.division;\n      var userGames = props.route.params.games.filter(function (game) {\n        return game.player == fullName;\n      });\n      var gamesWon = 0;\n      var gamesLost = 0;\n\n      for (var _iterator2 = userGames, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n        var _ref3;\n\n        if (_isArray2) {\n          if (_i3 >= _iterator2.length) break;\n          _ref3 = _iterator2[_i3++];\n        } else {\n          _i3 = _iterator2.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var _game = _ref3;\n\n        if (_game.isCaptain && _game.isGameWon) {\n          gamesWon++;\n        }\n\n        if (_game.isCaptain && !_game.isGameWon) {\n          gamesLost++;\n        }\n      }\n\n      if (standingsDict[userDivision]) {\n        standingsDict[userDivision].push([fullName, gamesWon, gamesLost]);\n      } else {\n        standingsDict[userDivision] = [[fullName, gamesWon, gamesLost]];\n      }\n    };\n\n    for (var _iterator = props.route.params.users, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var user = _ref;\n\n      _loop(user);\n    }\n\n    var standingsTuple = [];\n\n    for (var _i2 = 0, _Object$entries = Object.entries(standingsDict); _i2 < _Object$entries.length; _i2++) {\n      var _ref2 = _Object$entries[_i2];\n\n      var _ref4 = _slicedToArray(_ref2, 2);\n\n      div = _ref4[0];\n      row = _ref4[1];\n      standingsTuple.push([div, row]);\n    }\n\n    standingsTuple.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n    setStandings(standingsTuple);\n    setIsLoading(false);\n  }\n\n  function renderContent() {\n    if (!isLoading && standings.length != 0) {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        }\n      }, standings.map(function (_ref5, i) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            division = _ref6[0],\n            row = _ref6[1];\n\n        row.sort(function (a, b) {\n          return b[1] - a[1];\n        });\n        return React.createElement(DataTable, {\n          key: i,\n          style: {\n            marginTop: 30,\n            width: wp('90%')\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          }\n        }, React.createElement(DataTable.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          }\n        }, React.createElement(DataTable.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          }\n        }, \"Division \", division[0]), React.createElement(DataTable.Title, {\n          numeric: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          }\n        }, \"W\"), React.createElement(DataTable.Title, {\n          numeric: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          }\n        }, \"L\")), row.map(function (row, i) {\n          return React.createElement(DataTable.Row, {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            }\n          }, React.createElement(DataTable.Cell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            }\n          }, row[0]), React.createElement(DataTable.Cell, {\n            numeric: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            }\n          }, row[1]), React.createElement(DataTable.Cell, {\n            numeric: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            }\n          }, row[2]));\n        }));\n      }));\n    } else {\n      return React.createElement(View, {\n        style: {\n          height: hp('80%')\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        }\n      }, React.createElement(ActivityIndicator, {\n        style: {\n          marginTop: hp('20%')\n        },\n        animating: true,\n        size: \"large\",\n        color: \"#007bff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        }\n      }));\n    }\n  }\n\n  return React.createElement(Header, {\n    title: \"Standings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    }\n  }, renderContent());\n}","map":{"version":3,"sources":["/Users/alecdifederico/code/wbl-react-stats-app/pages/Standings.js"],"names":["React","useState","useEffect","heightPercentageToDP","hp","widthPercentageToDP","wp","ActivityIndicator","DataTable","Header","Standings","props","standings","setStandings","isLoading","setIsLoading","calculateStandings","standingsDict","user","fullName","firstName","lastName","userDivision","division","userGames","route","params","games","filter","game","player","gamesWon","gamesLost","isCaptain","isGameWon","push","users","standingsTuple","Object","entries","div","row","sort","a","b","renderContent","length","map","i","marginTop","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View } from 'react-native';\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport { ActivityIndicator, DataTable } from 'react-native-paper';\n\nimport Header from '../components/Header';\n\n\nexport default function Standings(props) {\n  const [standings, setStandings] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    calculateStandings();\n  }, []);\n\n  // const onRefresh = useCallback(async () => {\n  //   setRefreshing(true);\n \n  //     try {\n  //       let response = await fetch(\n  //         'http://www.mocky.io/v2/5e3315753200008abe94d3d8?mocky-delay=2000ms',\n  //       );\n  //       let responseJson = await response.json();\n  //       console.log(responseJson);\n  //       setRefreshing(false)\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  \n  // }, [refreshing]);\n\n  function calculateStandings() {\n    let standingsDict = {}\n    for (const user of props.route.params.users) {\n      let fullName = `${user.firstName} ${user.lastName}`;\n      let userDivision = user.division;\n      let userGames = props.route.params.games.filter(game => game.player == fullName)\n\n      let gamesWon = 0;\n      let gamesLost = 0;\n\n      for (const game of userGames) {\n        if (game.isCaptain && game.isGameWon) {\n          gamesWon++;\n        }\n\n        if (game.isCaptain && !game.isGameWon) {\n          gamesLost++;\n        }\n      }\n\n      if (standingsDict[userDivision]) {\n        standingsDict[userDivision].push([fullName, gamesWon, gamesLost])\n      } else {\n        standingsDict[userDivision] = [[fullName, gamesWon, gamesLost]]\n      }\n    }\n\n    let standingsTuple = [];\n    for ([div, row] of Object.entries(standingsDict)) {\n      standingsTuple.push([div, row]);\n    }\n    \n    standingsTuple.sort(function(a, b){ return a[0] - b[0]});\n    setStandings(standingsTuple);\n    setIsLoading(false);\n  }\n\n  function renderContent() {\n    if(!isLoading && standings.length != 0) {\n      return (\n        <View>\n          {standings.map(([division, row], i) => {\n            row.sort(function(a, b){ return b[1] - a[1]});\n\n            return (\n              <DataTable key={i} style={{marginTop: 30, width: wp('90%')}}>\n                <DataTable.Header>\n                  <DataTable.Title>Division {division[0]}</DataTable.Title>\n                  <DataTable.Title numeric>W</DataTable.Title>\n                  <DataTable.Title numeric>L</DataTable.Title>\n                </DataTable.Header>\n\n                {row.map((row, i) => {\n                  return (\n                    <DataTable.Row key={i}>\n                      <DataTable.Cell>{row[0]}</DataTable.Cell>\n                      <DataTable.Cell numeric>{row[1]}</DataTable.Cell>\n                      <DataTable.Cell numeric>{row[2]}</DataTable.Cell>\n                    </DataTable.Row>\n                  );\n                })}\n              </DataTable>\n            );\n          })}\n        </View>\n      );\n    } else {\n      return (\n        <View style={{height: hp('80%')}}>\n          <ActivityIndicator style={{marginTop: hp('20%')}} animating={true} size=\"large\" color=\"#007bff\" />\n        </View>\n      );\n    }\n  }\n\n  return (\n    <Header title=\"Standings\">\n      {renderContent()}\n    </Header>\n  );\n}"]},"metadata":{},"sourceType":"module"}