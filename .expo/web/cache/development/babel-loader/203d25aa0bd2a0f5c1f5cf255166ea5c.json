{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/alecdifederico/code/wbl-react-stats-app/pages/SignUp.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { showMessage } from 'react-native-flash-message';\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { TextInput, IconButton, Button, ToggleButton } from 'react-native-paper';\nimport Container from \"../components/Container\";\nimport { db, auth } from \"../Firebase\";\nexport default function SignUp(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setIsLoading = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      division = _useState12[0],\n      setDivision = _useState12[1];\n\n  function handleSignUp() {\n    var response, user, errorMessage;\n    return _regeneratorRuntime.async(function handleSignUp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.prev = 1;\n\n            if (!(firstName == '')) {\n              _context.next = 4;\n              break;\n            }\n\n            throw \"First name can't be empty\";\n\n          case 4:\n            if (!(lastName == '')) {\n              _context.next = 6;\n              break;\n            }\n\n            throw \"Last name can't be emtpy\";\n\n          case 6:\n            if (!(typeof division !== 'number')) {\n              _context.next = 8;\n              break;\n            }\n\n            throw \"Please select a division\";\n\n          case 8:\n            response = null;\n\n            if (!(firstName != '' && lastName != '')) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(auth.createUserWithEmailAndPassword(email, password));\n\n          case 12:\n            response = _context.sent;\n\n          case 13:\n            if (response && response.user.uid) {\n              user = {\n                uid: response.user.uid,\n                firstName: firstName,\n                lastName: lastName,\n                email: email,\n                isAdmin: false,\n                subscribed: true,\n                division: division\n              };\n              setIsLoading(false);\n              db.collection('users').doc(response.user.uid).set(user);\n              props.navigation.navigate('Form', {\n                userData: user\n              });\n            }\n\n            _context.next = 22;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](1);\n            setIsLoading(false);\n            errorMessage = _context.t0.toString();\n\n            if (errorMessage.split(\" \")[0] == 'Error:') {\n              errorMessage = errorMessage.split(\" \");\n              errorMessage.shift();\n              errorMessage = errorMessage.join(' ');\n            }\n\n            showMessage({\n              message: \"\\nError\",\n              description: errorMessage,\n              type: \"danger\",\n              style: {\n                height: '20%',\n                width: '70%'\n              },\n              titleStyle: {\n                textAlign: 'center',\n                fontSize: 20,\n                fontWeight: 'bold'\n              },\n              textStyle: {\n                textAlign: 'center'\n              },\n              duration: 2000\n            });\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 16]]);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    }\n  }, React.createElement(View, {\n    style: {\n      alignSelf: 'flex-start',\n      marginLeft: 20,\n      marginTop: hp('4%'),\n      position: 'absolute',\n      top: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    }\n  }, React.createElement(IconButton, {\n    icon: \"arrow-left\",\n    color: \"#007bff\",\n    size: 35,\n    onPress: function onPress() {\n      return props.navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    }\n  })), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    }\n  }, \"Sign Up\"), React.createElement(KeyboardAwareScrollView, {\n    style: {\n      width: '80%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    }\n  }, React.createElement(TextInput, {\n    label: \"First Name\",\n    placeholder: \"John\",\n    onChangeText: function onChangeText(firstName) {\n      return setFirstName(firstName);\n    },\n    selectionColor: \"rgb(6, 53, 132)\",\n    underlineColor: \"#7CA1B4\",\n    style: {\n      marginTop: 30\n    },\n    theme: {\n      colors: {\n        primary: 'rgb(6, 53, 132)'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    }\n  }), React.createElement(TextInput, {\n    label: \"Last Name\",\n    placeholder: \"Smith\",\n    onChangeText: function onChangeText(lastName) {\n      return setLastName(lastName);\n    },\n    selectionColor: \"rgb(6, 53, 132)\",\n    underlineColor: \"#7CA1B4\",\n    style: {\n      marginTop: 20\n    },\n    theme: {\n      colors: {\n        primary: 'rgb(6, 53, 132)'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email Address\",\n    placeholder: \"email@address.com\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    keyboardType: \"email-address\",\n    selectionColor: \"rgb(6, 53, 132)\",\n    underlineColor: \"#7CA1B4\",\n    style: {\n      marginTop: 20\n    },\n    theme: {\n      colors: {\n        primary: 'rgb(6, 53, 132)'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    placeholder: \"password\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    secureTextEntry: true,\n    selectionColor: \"rgb(6, 53, 132)\",\n    underlineColor: \"#7CA1B4\",\n    style: {\n      marginTop: 20\n    },\n    theme: {\n      colors: {\n        primary: 'rgb(6, 53, 132)'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    }\n  }, React.createElement(Text, {\n    style: styles.divisionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    }\n  }, \"Your Division\"), React.createElement(ToggleButton.Row, {\n    onValueChange: function onValueChange(value) {\n      return setDivision(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    }\n  }, React.createElement(ToggleButton, {\n    icon: \"numeric-1-circle-outline\",\n    status: 1 == division ? 'checked' : 'unchecked',\n    value: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    }\n  }), React.createElement(ToggleButton, {\n    icon: \"numeric-2-circle-outline\",\n    status: 2 == division ? 'checked' : 'unchecked',\n    value: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    }\n  }))), React.createElement(Button, {\n    loading: isLoading,\n    mode: \"contained\",\n    color: \"#007bff\",\n    onPress: function onPress() {\n      return handleSignUp();\n    },\n    style: {\n      marginTop: 20\n    },\n    contentStyle: {\n      height: 50\n    },\n    labelStyle: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    }\n  }, isLoading ? 'Loading' : 'Sign Up')));\n}\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    textAlign: 'center',\n    marginTop: hp('12%'),\n    fontWeight: 'bold'\n  },\n  divisionText: {\n    fontSize: 20,\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/alecdifederico/code/wbl-react-stats-app/pages/SignUp.js"],"names":["React","useState","showMessage","heightPercentageToDP","hp","KeyboardAwareScrollView","TextInput","IconButton","Button","ToggleButton","Container","db","auth","SignUp","props","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","isLoading","setIsLoading","division","setDivision","handleSignUp","response","createUserWithEmailAndPassword","user","uid","isAdmin","subscribed","collection","doc","set","navigation","navigate","userData","errorMessage","toString","split","shift","join","message","description","type","style","height","width","titleStyle","textAlign","fontSize","fontWeight","textStyle","duration","alignSelf","marginLeft","marginTop","position","top","goBack","styles","title","colors","primary","flexDirection","justifyContent","divisionText","value","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { showMessage } from 'react-native-flash-message';\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { TextInput, IconButton, Button, ToggleButton } from 'react-native-paper';\n\nimport Container from '../components/Container';\nimport { db, auth } from '../Firebase';\n\n\nexport default function SignUp(props) {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [division, setDivision] = useState(null)\n\n  async function handleSignUp() {\n    setIsLoading(true);\n\n    try {\n      if (firstName == '') {\n        throw \"First name can't be empty\"\n      }\n\n      if (lastName == '') {\n        throw \"Last name can't be emtpy\"\n      }\n\n      if (typeof division !== 'number') {\n        throw \"Please select a division\"\n      }\n\n      let response = null;\n      if(firstName != '' && lastName != '') {\n        response = await auth.createUserWithEmailAndPassword(email, password);\n      }\n\n      if (response && response.user.uid) {\n        const user = {\n          uid: response.user.uid,\n          firstName: firstName,\n          lastName: lastName,\n          email: email,\n          isAdmin: false,\n          subscribed: true,\n          division: division\n        }\n\n        setIsLoading(false);\n  \n        db.collection('users')\n          .doc(response.user.uid)\n          .set(user)\n        \n        props.navigation.navigate('Form', {userData: user});\n      }\n    } catch (e) {\n      setIsLoading(false);\n\n      let errorMessage = e.toString();\n      if (errorMessage.split(\" \")[0] == 'Error:') {\n        errorMessage = errorMessage.split(\" \");\n        errorMessage.shift();\n        errorMessage = errorMessage.join(' ');\n      }\n\n      showMessage({\n        message: \"\\nError\",\n        description: errorMessage,\n        type: \"danger\",\n        style: {height: '20%', width: '70%'},\n        titleStyle: {textAlign: 'center', fontSize: 20, fontWeight: 'bold'},\n        textStyle: {textAlign: 'center'},\n        duration: 2000\n      });\n    }\n  }\n  \n  return (\n    <Container>\n      <View style={{alignSelf: 'flex-start', marginLeft: 20, marginTop: hp('4%'), position: 'absolute', top: 0}}>\n        <IconButton icon=\"arrow-left\" color=\"#007bff\" size={35} onPress={() => props.navigation.goBack()} />\n      </View>\n      \n      <Text style={styles.title}>Sign Up</Text>\n\n      <KeyboardAwareScrollView style={{ width: '80%'}}>\n        <TextInput \n          label='First Name'\n          placeholder='John'\n          onChangeText={firstName => setFirstName(firstName)}\n          selectionColor='rgb(6, 53, 132)'\n          underlineColor='#7CA1B4'\n          style={{ marginTop: 30 }}\n          theme={{ colors: { primary: 'rgb(6, 53, 132)' } }}\n        />\n\n        <TextInput \n          label='Last Name'\n          placeholder='Smith'\n          onChangeText={lastName => setLastName(lastName)}\n          selectionColor='rgb(6, 53, 132)'\n          underlineColor='#7CA1B4'\n          style={{ marginTop: 20 }}\n          theme={{ colors: { primary: 'rgb(6, 53, 132)' } }}\n        />\n\n        <TextInput \n          label='Email Address'\n          placeholder='email@address.com'\n          onChangeText={email => setEmail(email)}\n          keyboardType='email-address'\n          selectionColor='rgb(6, 53, 132)'\n          underlineColor='#7CA1B4'\n          style={{ marginTop: 20 }}\n          theme={{ colors: { primary: 'rgb(6, 53, 132)' } }}\n        />\n\n        <TextInput \n          label='Password'\n          placeholder='password'\n          onChangeText={password => setPassword(password)}\n          secureTextEntry={true}\n          selectionColor='rgb(6, 53, 132)'\n          underlineColor='#7CA1B4'\n          style={{ marginTop: 20 }}\n          theme={{ colors: { primary: 'rgb(6, 53, 132)' } }}\n        />\n\n        <View style={{flexDirection: 'row', justifyContent: 'space-between', marginTop: 20}}>\n          <Text style={styles.divisionText}>Your Division</Text>\n\n          <ToggleButton.Row\n            onValueChange={value => setDivision(value)}\n          >\n            <ToggleButton\n              icon=\"numeric-1-circle-outline\"\n              status={1 == division ? 'checked' : 'unchecked'}\n              value={1}\n            />\n\n            <ToggleButton\n              icon=\"numeric-2-circle-outline\"\n              status={2 == division ? 'checked' : 'unchecked'}\n              value={2}\n            />\n          </ToggleButton.Row>\n        </View>\n\n        <Button\n          loading={isLoading}\n          mode='contained'\n          color='#007bff'\n          onPress={() => handleSignUp()}\n          style={{ marginTop: 20 }}\n          contentStyle={{ height: 50 }}\n          labelStyle={{ fontWeight: 'bold'}}\n        >\n          {isLoading ? 'Loading' : 'Sign Up'}\n        </Button>\n \n      </KeyboardAwareScrollView>\n    </Container>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    textAlign: 'center',\n    marginTop: hp('12%'),\n    fontWeight: 'bold'\n  },\n  divisionText: {\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n});"]},"metadata":{},"sourceType":"module"}