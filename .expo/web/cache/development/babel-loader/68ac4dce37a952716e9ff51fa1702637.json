{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/alecdifederico/code/wbl-react-stats-app/pages/Login.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { showMessage } from 'react-native-flash-message';\nimport { TextInput, Button } from 'react-native-paper';\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport Container from \"../components/Container\";\nimport { db, auth } from \"../Firebase\";\nexport default function Login(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  function handleLogin() {\n    var response, user, errorMessage;\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(auth.signInWithEmailAndPassword(email, password));\n\n          case 4:\n            response = _context.sent;\n\n            if (!response.user.uid) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(db.collection('users').doc(response.user.uid).get());\n\n          case 8:\n            user = _context.sent;\n            setIsLoading(false);\n\n            if (!(Object.keys(user.data()).length === 0)) {\n              _context.next = 12;\n              break;\n            }\n\n            throw \"User doesn't exist\";\n\n          case 12:\n            props.navigation.navigate('Form', {\n              userData: user.data()\n            });\n\n          case 13:\n            _context.next = 21;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](1);\n            setIsLoading(false);\n            errorMessage = _context.t0.toString();\n\n            if (errorMessage.split(\" \")[0] == 'Error:') {\n              errorMessage = errorMessage.split(\" \");\n              errorMessage.shift();\n              errorMessage = errorMessage.join(' ');\n              errorMessage = \"Username/Password is incorrect\";\n            }\n\n            showMessage({\n              message: \"\\nError\",\n              description: errorMessage,\n              type: \"danger\",\n              style: {\n                height: '20%',\n                width: '70%'\n              },\n              titleStyle: {\n                textAlign: 'center',\n                fontSize: 20,\n                fontWeight: 'bold'\n              },\n              textStyle: {\n                textAlign: 'center'\n              },\n              duration: 2000\n            });\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 15]]);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    }\n  }, \"Sign In\"), React.createElement(View, {\n    style: {\n      width: '80%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    }\n  }, React.createElement(TextInput, {\n    label: \"Email Address\",\n    placeholder: \"email@address.com\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    keyboardType: \"email-address\",\n    selectionColor: \"rgb(6, 53, 132)\",\n    underlineColor: \"#7CA1B4\",\n    style: {\n      marginTop: 30\n    },\n    theme: {\n      colors: {\n        primary: 'rgb(6, 53, 132)'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    placeholder: \"password\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    secureTextEntry: true,\n    selectionColor: \"rgb(6, 53, 132)\",\n    underlineColor: \"#7CA1B4\",\n    style: {\n      marginTop: 20\n    },\n    theme: {\n      colors: {\n        primary: 'rgb(6, 53, 132)'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'flex-end'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    }\n  }, React.createElement(Button, {\n    uppercase: false,\n    color: \"#007bff\",\n    labelStyle: {\n      marginRight: 0\n    },\n    onPress: function onPress() {\n      return props.navigation.navigate('PasswordReset');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    }\n  }, \"Forgot password?\")), React.createElement(Button, {\n    loading: isLoading,\n    mode: \"contained\",\n    color: \"#007bff\",\n    onPress: function onPress() {\n      return handleLogin();\n    },\n    style: {\n      marginTop: 15\n    },\n    contentStyle: {\n      height: 50\n    },\n    labelStyle: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    }\n  }, isLoading ? 'Loading' : 'Login'), React.createElement(Button, {\n    uppercase: false,\n    color: \"#007bff\",\n    style: {\n      marginTop: 10\n    },\n    onPress: function onPress() {\n      return props.navigation.navigate('SignUp');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    }\n  }, \"No account yet? Sign Up\")));\n}\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    textAlign: 'center',\n    marginTop: hp('12%'),\n    fontWeight: 'bold'\n  },\n  picker: {\n    height: 100,\n    width: '80%'\n  }\n});","map":{"version":3,"sources":["/Users/alecdifederico/code/wbl-react-stats-app/pages/Login.js"],"names":["React","useState","showMessage","TextInput","Button","heightPercentageToDP","hp","Container","db","auth","Login","props","email","setEmail","password","setPassword","isLoading","setIsLoading","handleLogin","signInWithEmailAndPassword","response","user","uid","collection","doc","get","Object","keys","data","length","navigation","navigate","userData","errorMessage","toString","split","shift","join","message","description","type","style","height","width","titleStyle","textAlign","fontSize","fontWeight","textStyle","duration","styles","title","marginTop","colors","primary","flexDirection","justifyContent","marginRight","StyleSheet","create","picker"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { showMessage } from 'react-native-flash-message';\nimport { TextInput, Button } from 'react-native-paper';\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport Container from '../components/Container'\nimport { db, auth } from '../Firebase';\n\n\nexport default function Login(props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  async function handleLogin() {\n    setIsLoading(true);\n\n    try {\n      const response = await auth.signInWithEmailAndPassword(email, password);\n      \n      if (response.user.uid) {\n        const user = await db\n          .collection('users')\n          .doc(response.user.uid)\n          .get()\n\n        setIsLoading(false);\n\n        if (Object.keys(user.data()).length === 0) {\n          throw \"User doesn't exist\"\n        }\n  \n        props.navigation.navigate('Form', {userData: user.data()});\n      }\n      \n    } catch (e) {\n      setIsLoading(false);\n\n      let errorMessage = e.toString();\n      if (errorMessage.split(\" \")[0] == 'Error:') {\n        errorMessage = errorMessage.split(\" \");\n        errorMessage.shift();\n        errorMessage = errorMessage.join(' ');\n        errorMessage = \"Username/Password is incorrect\"\n      }\n\n      showMessage({\n        message: \"\\nError\",\n        description: errorMessage,\n        type: \"danger\",\n        style: {height: '20%', width: '70%'},\n        titleStyle: {textAlign: 'center', fontSize: 20, fontWeight: 'bold'},\n        textStyle: {textAlign: 'center'},\n        duration: 2000\n      });\n    }\n  }\n\n  return (\n    <Container>\n      <Text style={styles.title}>Sign In</Text>\n\n      <View style={{ width: '80%' }}>\n        <TextInput \n          label='Email Address'\n          placeholder='email@address.com'\n          onChangeText={email => setEmail(email)}\n          keyboardType='email-address'\n          selectionColor='rgb(6, 53, 132)'\n          underlineColor='#7CA1B4'\n          style={{ marginTop: 30 }}\n          theme={{ colors: { primary: 'rgb(6, 53, 132)' } }}\n        />\n\n        <TextInput \n          label='Password'\n          placeholder='password'\n          onChangeText={password => setPassword(password)}\n          secureTextEntry={true}\n          selectionColor='rgb(6, 53, 132)'\n          underlineColor='#7CA1B4'\n          style={{ marginTop: 20 }}\n          theme={{ colors: { primary: 'rgb(6, 53, 132)' } }}\n        />\n\n        <View style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\n          <Button \n            uppercase={false} \n            color='#007bff'\n            labelStyle={{ marginRight: 0}}\n            onPress={() => props.navigation.navigate('PasswordReset')}>Forgot password?</Button>\n        </View>\n\n        <Button\n          loading={isLoading}\n          mode='contained'\n          color='#007bff'\n          onPress={() => handleLogin()}\n          style={{ marginTop: 15 }}\n          contentStyle={{ height: 50 }}\n          labelStyle={{ fontWeight: 'bold'}}\n        >\n          {isLoading ? 'Loading' : 'Login'}\n        </Button>\n\n        <Button \n          uppercase={false} \n          color='#007bff' \n          style={{ marginTop: 10 }}\n          onPress={() => props.navigation.navigate('SignUp')}\n        >\n          No account yet? Sign Up\n        </Button>\n   \n      </View>\n    </Container>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    textAlign: 'center',\n    marginTop: hp('12%'),\n    fontWeight: 'bold'\n  },\n  picker: {\n    height: 100,\n    width: '80%'\n  }\n});"]},"metadata":{},"sourceType":"module"}