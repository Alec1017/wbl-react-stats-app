{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/alecdifederico/code/wbl-react-stats-app/pages/PasswordReset.js\";\nimport React, { useState } from 'react';\nimport * as Haptics from 'expo-haptics';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { showMessage } from 'react-native-flash-message';\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { TextInput, IconButton, Button } from 'react-native-paper';\nimport Container from \"../components/Container\";\nimport { auth } from \"../Firebase\";\nexport default function PasswordReset(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  function handlePasswordReset() {\n    var response;\n    return _regeneratorRuntime.async(function handlePasswordReset$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(auth.sendPasswordResetEmail(email));\n\n          case 4:\n            response = _context.sent;\n            setIsLoading(false);\n            showMessage({\n              message: \"\\nReset email sent!\",\n              description: \"Check your email for a reset link\",\n              type: \"success\",\n              style: {\n                height: '20%',\n                width: '70%'\n              },\n              titleStyle: {\n                textAlign: 'center',\n                fontSize: 20,\n                fontWeight: 'bold'\n              },\n              textStyle: {\n                textAlign: 'center'\n              },\n              duration: 2000\n            });\n            Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);\n            props.navigation.navigate('Login');\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            setIsLoading(false);\n            showMessage({\n              message: \"\\nError\",\n              description: _context.t0.toString(),\n              type: \"danger\",\n              style: {\n                height: '20%',\n                width: '70%'\n              },\n              titleStyle: {\n                textAlign: 'center',\n                fontSize: 20,\n                fontWeight: 'bold'\n              },\n              textStyle: {\n                textAlign: 'center'\n              },\n              duration: 2000\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 11]]);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    }\n  }, React.createElement(View, {\n    style: {\n      alignSelf: 'flex-start',\n      marginLeft: 20,\n      marginTop: hp('4%'),\n      position: 'absolute',\n      top: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    }\n  }, React.createElement(IconButton, {\n    icon: \"arrow-left\",\n    color: \"#007bff\",\n    size: 35,\n    onPress: function onPress() {\n      return props.navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    }\n  })), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    }\n  }, \"Password\"), React.createElement(View, {\n    style: {\n      width: '80%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    }\n  }, React.createElement(TextInput, {\n    label: \"Email Address\",\n    placeholder: \"email@address.com\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    keyboardType: \"email-address\",\n    selectionColor: \"rgb(6, 53, 132)\",\n    underlineColor: \"#7CA1B4\",\n    style: {\n      marginTop: 30\n    },\n    theme: {\n      colors: {\n        primary: 'rgb(6, 53, 132)'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    }\n  }), React.createElement(Button, {\n    loading: isLoading,\n    mode: \"contained\",\n    color: \"#007bff\",\n    onPress: function onPress() {\n      return handlePasswordReset();\n    },\n    style: {\n      marginTop: 20\n    },\n    contentStyle: {\n      height: 50\n    },\n    labelStyle: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    }\n  }, isLoading ? 'Loading' : 'Send Reset Email')));\n}\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    textAlign: 'center',\n    marginTop: hp('12%'),\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/Users/alecdifederico/code/wbl-react-stats-app/pages/PasswordReset.js"],"names":["React","useState","Haptics","showMessage","heightPercentageToDP","hp","TextInput","IconButton","Button","Container","auth","PasswordReset","props","email","setEmail","isLoading","setIsLoading","handlePasswordReset","sendPasswordResetEmail","response","message","description","type","style","height","width","titleStyle","textAlign","fontSize","fontWeight","textStyle","duration","notificationAsync","NotificationFeedbackType","Success","navigation","navigate","toString","alignSelf","marginLeft","marginTop","position","top","goBack","styles","title","colors","primary","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as Haptics from 'expo-haptics';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { showMessage } from 'react-native-flash-message';\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { TextInput, IconButton, Button } from 'react-native-paper';\n\nimport Container from '../components/Container';\nimport { auth } from '../Firebase';\n\n\nexport default function PasswordReset(props) {\n  const [email, setEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function handlePasswordReset() {\n    setIsLoading(true);\n\n    try {\n      const response = await auth.sendPasswordResetEmail(email);\n\n      setIsLoading(false);\n\n      showMessage({\n        message: \"\\nReset email sent!\",\n        description: \"Check your email for a reset link\",\n        type: \"success\",\n        style: {height: '20%', width: '70%'},\n        titleStyle: {textAlign: 'center', fontSize: 20, fontWeight: 'bold'},\n        textStyle: {textAlign: 'center'},\n        duration: 2000\n      });\n\n      Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);\n      props.navigation.navigate('Login');\n    } catch (e) {\n      setIsLoading(false);\n      \n      showMessage({\n        message: \"\\nError\",\n        description: e.toString(),\n        type: \"danger\",\n        style: {height: '20%', width: '70%'},\n        titleStyle: {textAlign: 'center', fontSize: 20, fontWeight: 'bold'},\n        textStyle: {textAlign: 'center'},\n        duration: 2000\n      });\n    }\n  }\n  \n  return (\n    <Container>\n      <View style={{alignSelf: 'flex-start', marginLeft: 20, marginTop: hp('4%'), position: 'absolute', top: 0}}>\n        <IconButton icon=\"arrow-left\" color=\"#007bff\" size={35} onPress={() => props.navigation.goBack()} />\n      </View>\n\n      <Text style={styles.title}>Password</Text>\n      \n      <View style={{width: '80%'}}>\n        <TextInput \n          label='Email Address'\n          placeholder='email@address.com'\n          onChangeText={email => setEmail(email)}\n          keyboardType='email-address'\n          selectionColor='rgb(6, 53, 132)'\n          underlineColor='#7CA1B4'\n          style={{ marginTop: 30 }}\n          theme={{ colors: { primary: 'rgb(6, 53, 132)' } }}\n        />\n\n        <Button\n          loading={isLoading}\n          mode='contained'\n          color='#007bff'\n          onPress={() => handlePasswordReset()}\n          style={{ marginTop: 20 }}\n          contentStyle={{ height: 50 }}\n          labelStyle={{ fontWeight: 'bold'}}\n        >\n          {isLoading ? 'Loading' : 'Send Reset Email'}\n        </Button>\n      </View>\n    </Container>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    textAlign: 'center',\n    marginTop: hp('12%'),\n    fontWeight: 'bold'\n  }\n});"]},"metadata":{},"sourceType":"module"}